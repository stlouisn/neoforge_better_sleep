plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.compatible_minecraft_versions
group = project.maven_group

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:" + project.minecraft_version
	mappings "net.fabricmc:yarn:" + project.yarn_mappings
	modImplementation "net.fabricmc:fabric-loader:" + project.loader_version

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:" + project.fabric_api_version

	//Config library
	modApi ("me.sargunvohra.mcmods:autoconfig1u:" + project.autoconfig1u_version) {exclude module: 'fabric-api'}
	//Config GUI support
	modApi ("me.shedaniel.cloth:config-2:" + project.cloth_config_2_version) {exclude module: 'fabric-api'}
	//Config menu support
	modImplementation ("io.github.prospector:modmenu:" + project.modmenu_version) {exclude module: 'fabric-api'}

	//Config library
	include "me.sargunvohra.mcmods:autoconfig1u:" + project.autoconfig1u_version
	//Config GUI support
	include "me.shedaniel.cloth:config-2:" + project.cloth_config_2_version

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

processResources {
	inputs.property "version", project.version
	inputs.property "mod_id", project.mod_id

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand (
				"minecraft_version": project.minecraft_version,
				"min_minecraft_version": project.min_minecraft_version,
				"loader_version": project.loader_version,

				"mod_id": project.mod_id,
				"mod_version": project.version,
				"maven_group": project.maven_group,
				"archives_base_name": project.archives_base_name,
				"author": project.author,

				"fabric_api_version": project.fabric_api_version,
				"min_fabric_api_version": project.min_fabric_api_version
		)
	}


	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
