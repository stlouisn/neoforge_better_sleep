buildscript {
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath "com.github.yuchi:npm-semver:1.0.0"
	}
}

plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
}

import com.github.yuchi.semver.Version
import com.github.yuchi.semver.Range

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version + "+MC" +
		((project.min_minecraft_version != project.minecraft_version ?
				project.min_minecraft_version + "-" : "") +
				project.minecraft_version)

group = project.maven_group

repositories {
	mavenCentral()
	maven { url "https://server.bbkr.space/artifactory/libs-release" }

	maven {
		name = 'CrowdinTranslate source'
		url = "https://minecraft.guntram.de/maven/"
	}

	maven {
		name = "noauth"
		url = "https://dl.bintray.com/user11681/maven"
	}

	maven {
		name = "CurseMaven"
		url = "https://www.cursemaven.com"
	}

	//JITPACK MUST BE LAST!
	maven {
		name "jitpack"
		url "https://jitpack.io"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:" + project.minecraft_version
	mappings "net.fabricmc:yarn:" + project.yarn_mappings
	modImplementation "net.fabricmc:fabric-loader:" + project.loader_version

	// FAPI
	modImplementation "net.fabricmc.fabric-api:fabric-api:" + project.fabric_api_version

	//Config library
	modApi (include("me.sargunvohra.mcmods:autoconfig1u:" + project.autoconfig1u_version)) { exclude module: 'fabric-api' }
	//Config GUI support
	modApi (include("me.shedaniel.cloth:config-2:" + project.cloth_config_2_version)) { exclude module: 'fabric-api' }
	//Config menu support
	modImplementation ("io.github.prospector:modmenu:" + project.modmenu_version) { exclude module: 'fabric-api' }

	// Translation fetching
	modImplementation "de.guntram.mcmod:crowdin-translate:" + project.crowdin_translate_version
	include "de.guntram.mcmod:crowdin-translate:" + project.crowdin_translate_version

	Version modVer = Version.from(project.minecraft_version, false)
	Range noAuthRange = Range.from(">=1.16.4", false)

	if (noAuthRange.test(modVer)) {
		// dev only, prevent authentication
		modApi("user11681:noauth:+")
	}


}

processResources {
	inputs.property "version", project.version
	inputs.property "mod_id", project.mod_id

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand ([
				"minecraft_version": project.minecraft_version,
				"min_loader_version": project.min_loader_version,

				"mod_id": project.mod_id,
				"ModId": project.ModId,
				"mod_name": project.mod_name,
				"mod_description": project.mod_description,
				"mod_version": project.version,
				"maven_group": project.maven_group,
				"archives_base_name": project.archives_base_name,
				"author": project.author,

				"min_minecraft_version": project.min_minecraft_version,

				"fabric_api_version": project.fabric_api_version,
				"min_fabric_api_version": project.min_fabric_api_version,
				"autoconfig1u_version": project.autoconfig1u_version,
				"cloth_config_2_version": project.cloth_config_2_version,
				"modmenu_version": project.modmenu_version,
				"ModMenuIntegrationClass": project.ModId + "ModMenuIntegration"
		])
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
